[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/base/server.js",
    "content": "/**\n * @flow\n */\nrequire('source-map-support/register');\nrequire('@babel/register');\nrequire('@babel/polyfill');\nimport Pino from 'hapi-pino';\nimport Hapi from '@hapi/hapi';\nimport Inert from '@hapi/inert';\n// import Path from 'path';\n\n/**\n * Endpoint that can be created, should have a http method, path and controller that resolves when\n * the path is hit\n * @param {string} method     HTTP method the endpoint must be called with to trigger controller\n * @param {string} path       URL path of endpoint\n * @param {Function} controller Handler function that is triggered when endpoint is hit\n */\nexport interface EndpointConfig {\n  method: string;\n  path: string;\n  controller?: any; // eslint-disable-line\n}\n\n/**\n * Request Object that is passed to the controller as the first parameter\n * from https://github.com/hapijs/hapi/blob/master/API.md#request\n */\nexport interface HapiRequest {\n  server: any; // eslint-disable-line\n  headers: any; // eslint-disable-line\n  // from path\n  params: any; // eslint-disable-line\n  // Body of a POST request\n  payload: any; // eslint-disable-line\n};\n\n\n/**\n * Abstraction to manage running the server. Instantiate on application server start up\n * inside `entry.js` file or wherever the intial \"main\" script is\n *\n * @type {Server} class\n */\nexport class Server {\n  server: any; // eslint-disable-line\n\n  /**\n   * Server Constructor\n   */\n  constructor() {\n    this.server = Hapi.server({\n      port: 3333,\n      host: 'localhost',\n    });\n  }\n\n  /**\n   * Starts the server and registers any plugins\n   * @return {Promise} Resolves once server has started\n   */\n  async run() {\n    await this.server.start();\n    process.stdout.write('Server started on ' + this.server.info.port);\n\n    await this.server.register({\n      plugin: Pino,\n      options: {\n        prettyPrint: false,\n        logEvents: ['response']\n      }\n    });\n\n    // Serve Docs with OpenAPI and Swagger UI\n    // visit at http://localhost:3333/docs/swagger/index.html\n    await this.server.register({\n      plugin: Inert\n    });\n  }\n\n\n  /**\n   * Adds an endpoint at the path given handled by the controller\n   * @param {EndpointConfig} endpoint configuration\n   * @return {undefined}\n   */\n  addEndpoint({ method, path, controller }: EndpointConfig) {\n    this.server.route({\n      method,\n      path,\n      handler: controller,\n      options: {\n        cors: true\n      }\n    });\n  }\n\n  /**\n   * Adds the endpoints given to the server\n   * @param {Array<EndpointConfig>} routes Routes to add to the server\n   * @returns {undefined}\n   */\n  addEndpoints(routes: Array<EndpointConfig>) {\n    for (let i = 0; i < routes.length; i++) {\n      this.addEndpoint(routes[i]);\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/base/server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Server",
    "memberof": "src/base/server.js",
    "static": true,
    "longname": "src/base/server.js~Server",
    "access": "public",
    "export": true,
    "importPath": "HapiServer/src/base/server.js",
    "importStyle": "{Server}",
    "description": "Abstraction to manage running the server. Instantiate on application server start up\ninside `entry.js` file or wherever the intial \"main\" script is",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Server"
      ],
      "spread": false,
      "description": null
    },
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/base/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/base/server.js~Server#constructor",
    "access": "public",
    "description": "Server Constructor",
    "lineNumber": 37
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "server",
    "memberof": "src/base/server.js~Server",
    "static": false,
    "longname": "src/base/server.js~Server#server",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "run",
    "memberof": "src/base/server.js~Server",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/base/server.js~Server#run",
    "access": "public",
    "description": "Starts the server and registers any plugins",
    "lineNumber": 48,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves once server has started"
    },
    "params": []
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "addEndpoint",
    "memberof": "src/base/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/base/server.js~Server#addEndpoint",
    "access": "public",
    "description": "Adds an endpoint at the path given handled by the controller",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "EndpointConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "endpoint",
        "description": "configuration"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "addEndpoints",
    "memberof": "src/base/server.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/base/server.js~Server#addEndpoints",
    "access": "public",
    "description": "Adds the endpoints given to the server",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<EndpointConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "routes",
        "description": "Routes to add to the server"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/controllers/hello.controller.js",
    "content": "/**\n * @flow\n */\n// For some reason this can't use the `app` alias but can do relative pathing here... :/\nimport { HapiRequest } from '../base/server.js';\n\n/**\n * Controllers for Basic \"Hello World\" Functions\n *\n * See https://github.com/hapijs/hapi/blob/master/API.md#request for HapiRequest definition\n */\nexport class HelloWorld {\n  /**\n   * Returns 'Hello World!'\n   * @return {String} Hello World!\n   */\n  static basic(): string {\n    return 'Hello World!';\n  }\n\n  /**\n   * Returns a customized Hello Message\n   * @param  {HapiRequest} request Request Parameters\n   * @return {String}         Customized Hello Message\n   */\n  static name(request: HapiRequest): string {\n\n    const name = request.params.name;\n\n    return name + ' says: ' + Math.random() + '!!!!';\n  }\n}\n\nexport default [\n  {\n    path: '/hello',\n    method: 'GET',\n    controller: HelloWorld.basic\n  },\n  {\n    path: '/{name}',\n    method: 'GET',\n    controller: HelloWorld.name\n  }\n];\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/controllers/hello.controller.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "class",
    "name": "HelloWorld",
    "memberof": "src/controllers/hello.controller.js",
    "static": true,
    "longname": "src/controllers/hello.controller.js~HelloWorld",
    "access": "public",
    "export": true,
    "importPath": "HapiServer/src/controllers/hello.controller.js",
    "importStyle": "{HelloWorld}",
    "description": "Controllers for Basic \"Hello World\" Functions\n\nSee https://github.com/hapijs/hapi/blob/master/API.md#request for HapiRequest definition",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "basic",
    "memberof": "src/controllers/hello.controller.js~HelloWorld",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controllers/hello.controller.js~HelloWorld.basic",
    "access": "public",
    "description": "Returns 'Hello World!'",
    "lineNumber": 15,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Hello World!"
    },
    "params": []
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "name",
    "memberof": "src/controllers/hello.controller.js~HelloWorld",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controllers/hello.controller.js~HelloWorld.name",
    "access": "public",
    "description": "Returns a customized Hello Message",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "HapiRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": "Request Parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Customized Hello Message"
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/controllers/hello.controller.spec.js",
    "content": "import { HelloWorld } from './hello.controller.js';\n\n/** @test {HelloWorld} */\ndescribe('HelloWorld', () => {\n  /** @test {HelloWorld.basic} */\n  describe('basic()', () => {\n    it('returns \\'Hello World!\\'', () => {\n      const returned = HelloWorld.basic();\n\n      expect(returned).to.equal('Hello World!');\n    });\n  });\n\n  /** @test {HelloWorld.name} */\n  describe('name()', () => {\n    it('returns \\'{request.params.name} says:\\'', () => {\n      const request = {\n        params: {\n          name: 'Devlin'\n        }\n      };\n\n      let returned = HelloWorld.name(request);\n      expect(returned.startsWith('Devlin says')).to.be.true;\n\n      request.params.name = 'Michelle';\n\n      returned = HelloWorld.name(request);\n      expect(returned.startsWith('Michelle says')).to.be.true;\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/controllers/hello.controller.spec.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/controllers/info.controller.js",
    "content": "/**\n * @flow\n *\n * NOTE: This file will not be included in the esdoc list because it doesn't export any identifiers\n */\nimport { HapiRequest } from '../base/server.js';\n\n/**\n * Basic Controller for returning server information\n * @param  {HapiRequest} request Request Parameters\n * @return {Object}         Server information Object\n */\nfunction controller(request: HapiRequest): any { // eslint-disable-line\n  return request.server.info;\n}\n\nexport default [\n  {\n    path: '/info',\n    method: 'GET',\n    controller\n  }\n];\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/controllers/info.controller.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "controller",
    "memberof": "src/controllers/info.controller.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controllers/info.controller.js~controller",
    "access": "public",
    "export": false,
    "importPath": "HapiServer/src/controllers/info.controller.js",
    "importStyle": null,
    "description": "Basic Controller for returning server information",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "HapiRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": "Request Parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Server information Object"
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/controllers/note.controller.js",
    "content": "/**\n * @flow\n */\nimport { HapiRequest } from '../base/server.js';\nimport { NoteDataservice, Note } from '../dataservices/note.service.js';\n\n/**\n * Container Controller for Note CRUD Functions\n */\nexport class NoteController {\n  /**\n   * Returns a note, specified by Id\n   * @param  {HapiRequest} request RequestObject\n   * @return {Note}         Note corresponding to Id passed in\n   */\n  static getNoteById({ params }: HapiRequest): Promise<Note> {\n    return NoteDataservice.getNote({ id: params.id });\n  }\n\n  /**\n   * Create a new Note\n   * @param  {HapiRequest} request RequestObject\n   * @return {Note}        [description]\n   */\n  static createNote({ payload }: HapiRequest): Promise<Note> {\n    // TODO: Debug this?\n    console.log(payload);\n    return NoteDataservice.createNote({ name: payload.name });\n  }\n\n  /**\n   * Update a note, specified by id\n   * @param  {HapiRequest} request RequestObject\n   * @return {Note}        [description]\n   */\n  static updateNote({ payload }: HapiRequest) {\n    console.log(payload);\n  }\n\n  /**\n   * Delete a note, specified by id\n   * @param  {HapiRequest} request RequestObject\n   * @return {boolean}        [description]\n   */\n  static deleteNote({ params }: HapiRequest) {\n    console.log(params);\n  }\n}\n\nexport default [\n  {\n    path: '/note/{id}',\n    method: 'GET',\n    controller: NoteController.getNoteById\n  },\n  {\n    path: '/note',\n    method: 'POST',\n    controller: NoteController.createNote\n  },\n  {\n    path: '/note/{id?}',\n    method: 'PUT',\n    controller: NoteController.updateNote\n  },\n  {\n    path: '/note/{id}',\n    method: 'DELETE',\n    controller: NoteController.deleteNote\n  }\n];\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/controllers/note.controller.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "NoteController",
    "memberof": "src/controllers/note.controller.js",
    "static": true,
    "longname": "src/controllers/note.controller.js~NoteController",
    "access": "public",
    "export": true,
    "importPath": "HapiServer/src/controllers/note.controller.js",
    "importStyle": "{NoteController}",
    "description": "Container Controller for Note CRUD Functions",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "getNoteById",
    "memberof": "src/controllers/note.controller.js~NoteController",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controllers/note.controller.js~NoteController.getNoteById",
    "access": "public",
    "description": "Returns a note, specified by Id",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "HapiRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": "RequestObject"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Note"
      ],
      "spread": false,
      "description": "Note corresponding to Id passed in"
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "createNote",
    "memberof": "src/controllers/note.controller.js~NoteController",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controllers/note.controller.js~NoteController.createNote",
    "access": "public",
    "description": "Create a new Note",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "HapiRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": "RequestObject"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Note"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "updateNote",
    "memberof": "src/controllers/note.controller.js~NoteController",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controllers/note.controller.js~NoteController.updateNote",
    "access": "public",
    "description": "Update a note, specified by id",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "HapiRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": "RequestObject"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Note"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "deleteNote",
    "memberof": "src/controllers/note.controller.js~NoteController",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controllers/note.controller.js~NoteController.deleteNote",
    "access": "public",
    "description": "Delete a note, specified by id",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "HapiRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": "RequestObject"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/controllers/note.controller.spec.js",
    "content": "import { NoteController } from './note.controller.js';\nimport { NoteDataservice } from '../dataservices/note.service.js';\nimport mariadb from 'mariadb';\n\n/**\n * Question:\n * Do we want to unit test controllers? If we do openapi based testing with Newman, I think that should\n * cover all of the standard \"black-box\" expectations of the endpoint.\n * https://github.com/dtzar/openapi-auto-test\n */\n\n/** @test {NoteController} */\ndescribe('NoteController', () => {\n  beforeEach(() => {\n    sinonSandbox.stub(mariadb, 'createPool');\n  });\n\n  /** @test {NoteController.getNoteById} */\n  describe('getNoteById()', () => {\n    it('should call NoteDataservice.getNote (with id)', () => {\n      const id = 42;\n      const getStub = sinonSandbox.stub(NoteDataservice, 'getNote');\n      NoteController.getNoteById({ params: { id } });\n\n      expect(getStub).to.be.called;\n      /**\n       * Question:\n       * Should we check what the NoteController passes to backend? Seems too much like \"white-box\" testing\n       */\n      expect(getStub).to.be.calledWith({ id });\n    });\n\n\n    /**\n     * Question:\n     * Is this useful? Or should we just check that it calls the backend dataservice?\n     */\n    it('should return a Note with id passed', () => {\n      const id = 1;\n      sinonSandbox.stub(NoteDataservice, 'getNote').returns({\n        id\n      });\n\n      const note = NoteController.getNoteById({ params: { id } });\n\n      expect(note).to.contain({ id });\n    });\n\n    it('should return error message if id is invalid');\n\n    it('should return error message if Note doesn\\'t exist');\n  });\n\n  /** @test {NoteController.createNote} */\n  describe('createNote()', () => {\n    it('should call DataService.createNote (with newName?)', async() => {\n      const createNoteStub = sinonSandbox.stub(NoteDataservice, 'createNote');\n\n      const newNoteName = 'abc';\n      await NoteController.createNote({ payload: { name: newNoteName } });\n\n      expect(createNoteStub).to.be.called;\n      expect(createNoteStub).to.be.calledWith({ name: newNoteName });\n    });\n\n    it('should return note with name passed and new id', async() => {\n      const id = 13;\n      sinonSandbox.stub(NoteDataservice, 'createNote').callsFake(({ name }) => {\n        return {\n          id,\n          name\n        };\n      });\n\n      const newNoteName = 'abc';\n      const note = await NoteController.createNote({ payload: { name: newNoteName } });\n\n      expect(note).to.deep.equal({\n        id,\n        name: newNoteName\n      });\n    });\n\n    it('should return error if note name is empty');\n\n    it('should return error message if error creating note');\n  });\n\n  /** @test {NoteController.updateNote} */\n  describe('updateNote()', () => {\n    it('should call NoteDataservice.updateNote (with params)');\n\n    it('should return note with updated name, as passed');\n\n    it('should return error message if id is invalid');\n\n    it('should return error message if error updating note');\n  });\n\n  /** @test {NoteController.deleteNote} */\n  describe('deleteNote()', () => {\n    it('should call NoteDataservice.deleteNote (with id)');\n\n    it('should return the deleted note id');\n\n    it('should return error message if id is invalid');\n\n    it('should return error message if error deleting note');\n  });\n});\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/controllers/note.controller.spec.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/dataservices/note.service.js",
    "content": "/**\n * @flow\n *\n * MariaDB Service Example\n * TODO: Look into proper conventions and practice for opening/closing db and connections\n */\nimport mariadb from 'mariadb';\n\n// From MariaDB\ninterface InsertMariaDBResponse {\n  affectedRows: number;\n  insertId: number;\n  warningStatus: number;\n}\n\n/**\n * Note object with name and id\n * @type {Note}\n */\nexport interface Note {\n  id: number;\n  name: string;\n};\n\n/**\n * Note Dataservice for interacting with the storage system for saving notes\n */\nexport class NoteDataservice {\n  static dbPool: any;\n\n  /**\n   * Static Constructor to create database connection\n   * @returns {undefined}\n   */\n  static constructor() {\n    if (NoteDataservice.dbPool === undefined) {\n      // TODO: Configuration from file\n      NoteDataservice.dbPool = mariadb.createPool({\n        host: 'localhost',\n        user: 'root',\n        password: 'root',\n        connectionLimit: 5\n      });\n    }\n  }\n\n  /**\n   * Returns a note, specified by the caller by id\n   * @param  {number|string} id  `id` number of the Note to retrieve\n   * @return {Note}       Note object\n   */\n  static async getNote({ id }: { id: number | string }): Promise<Note> {\n    let connection;\n    try {\n      connection = await NoteDataservice.dbPool.getConnection();\n\n      const rows = await connection.query(`SELECT * FROM test.notes WHERE id=${id}`);\n\n      return rows[0];\n    } catch (err) {\n      console.log(err);\n      throw err;\n    } finally {\n      if (connection) {\n        connection.end();\n      }\n    }\n  }\n\n  /**\n   * Creates a new note with a name\n   * TODO: add (optional) content param and attribute\n   * @param  {String}  name name of note\n   * @return {Note}      Note Object\n   */\n  static async createNote({ name }: { name: string }): Promise<Note> {\n    let connection;\n    try {\n      connection = await NoteDataservice.dbPool.getConnection();\n\n      const response: InsertMariaDBResponse = await connection.query(\n        'INSERT INTO test.notes (name) VALUES (?)',\n        name\n      );\n\n      // TODO: Figure out how to debug with atom\n      console.log(response);\n\n      return await NoteDataservice.getNote({ id: response.insertId });\n    } catch (err) {\n      console.log(err);\n      throw err;\n    } finally {\n      if (connection) {\n        connection.end();\n      }\n    }\n  }\n}\n// Not sure if I like this pattern... maybe a reason to instantiate a dataservice and export it\nNoteDataservice.constructor();\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/dataservices/note.service.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "class",
    "name": "NoteDataservice",
    "memberof": "src/dataservices/note.service.js",
    "static": true,
    "longname": "src/dataservices/note.service.js~NoteDataservice",
    "access": "public",
    "export": true,
    "importPath": "HapiServer/src/dataservices/note.service.js",
    "importStyle": "{NoteDataservice}",
    "description": "Note Dataservice for interacting with the storage system for saving notes",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "constructor",
    "memberof": "src/dataservices/note.service.js~NoteDataservice",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dataservices/note.service.js~NoteDataservice.constructor",
    "access": "public",
    "description": "Static Constructor to create database connection",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{undefined}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "getNote",
    "memberof": "src/dataservices/note.service.js~NoteDataservice",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/dataservices/note.service.js~NoteDataservice.getNote",
    "access": "public",
    "description": "Returns a note, specified by the caller by id",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "`id` number of the Note to retrieve"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Note"
      ],
      "spread": false,
      "description": "Note object"
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "createNote",
    "memberof": "src/dataservices/note.service.js~NoteDataservice",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/dataservices/note.service.js~NoteDataservice.createNote",
    "access": "public",
    "description": "Creates a new note with a name\nTODO: add (optional) content param and attribute",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "name of note"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Note"
      ],
      "spread": false,
      "description": "Note Object"
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/dataservices/note.service.spec.js",
    "content": "// import { NoteDataservice } from './note.service.js';\nimport mariadb from 'mariadb';\n\n/** @test {NoteDataservice} */\ndescribe('NoteDataservice', () => {\n\n  let queryStub;\n  beforeEach(() => {\n    queryStub = sinonSandbox.stub();\n    // TODO: Set up mariadb mock to return connectionStub we can check during tests\n    sinonSandbox.stub(mariadb, 'createPool').resolves({\n      getConnection: () => {\n        return {\n          query: queryStub\n        };\n      }\n    });\n  });\n\n  /** @test {NoteDataservice.getNote} */\n  describe('getNote()', () => {\n    it('should return a note object with matching id');\n\n    /**\n     * Question:\n     * Should we test that mariadb queryStub is called? Seems like \"white-box\" testing, so probably not\n     */\n  });\n\n  /** @test {NoteDataservice.createNote} */\n  describe('createNote()', () => {\n    it('should return a note with the name passed');\n  });\n});\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/dataservices/note.service.spec.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/entry.js",
    "content": "/**\n * @flow\n *\n * Entry point that loads all routes for the server\n */\n\nimport { Server } from './base/server.js';\n\n// TODO: auto detect routes\n// https://stackoverflow.com/questions/6059246/how-to-include-route-handlers-in-multiple-files-in-express\nimport infoRoutes from './controllers/info.controller.js';\nimport helloRoutes from './controllers/hello.controller.js';\nimport noteRoutes from './controllers/note.controller.js';\n\n\nconst routes = infoRoutes.concat(helloRoutes, noteRoutes);\n\n// TODO: check if we're in development and only serve docs if we are\nconst shouldServeDocs = true;\nif (shouldServeDocs) {\n  routes.push({\n    method: 'GET',\n    path: '/openapi.yaml',\n    controller: {\n      // TODO: Fix this\n      file: 'openapi.yaml'\n    }\n  });\n\n  routes.push({\n    method: 'GET',\n    path: '/docs/{param*}',\n    controller: {\n      directory: {\n        // TODO: Fix this\n        path: '/Users/junkerd/Programming/js/template.node.hapi/docs',\n        index: true,\n        redirectToSlash: true\n      }\n    }\n  });\n}\n\n/**\n * Entry point to run the server\n * @return {undefined} no return\n */\nasync function main() {\n  const server = new Server();\n\n  await server.run();\n\n  server.addEndpoints(routes);\n}\nmain();\n\n// What is this about again?\nprocess.on('unhandledRejection', (err) => { // eslint-disable-line\n  process.stdout.write(JSON.stringify(err));\n  process.exit(1);\n});\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/entry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "routes",
    "memberof": "src/entry.js",
    "static": true,
    "longname": "src/entry.js~routes",
    "access": "public",
    "export": false,
    "importPath": "HapiServer/src/entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "shouldServeDocs",
    "memberof": "src/entry.js",
    "static": true,
    "longname": "src/entry.js~shouldServeDocs",
    "access": "public",
    "export": false,
    "importPath": "HapiServer/src/entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "main",
    "memberof": "src/entry.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/entry.js~main",
    "access": "public",
    "export": false,
    "importPath": "HapiServer/src/entry.js",
    "importStyle": null,
    "description": "Entry point to run the server",
    "lineNumber": 47,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": "no return"
    },
    "params": [],
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# Basic Webpack Server App\n\nThis is meant to be an example/template of how to use Webpack in the Backend for rapid development.\n\nTODO: Simple endpoints that store and retrieve values\n\n\n## Dependencies\nNode v8+ and npm\n  (tested with node v8.12.0 and v10.15.1)\n\nSee [package.json](https://github.com/devlinjunker/template.node.hapi/blob/master/package.json) for full list of current dependencies\n - Hapi v18\n - Webpack + Loaders\n - Babel\n - FlowJS\n - ESLint\n - Mocha, Chai, Sinon\n - EsDoc\n\n## Development\n\nHow to use this template to create a quick HTTP REST server:\n\n1. Download and update dependencies\n2. Add new OpenAPI endpoint to `openapi.yaml`\n3. Add Unit tests in `src/controllers/` (Test Driven Development)\n4. Add Controller Files to `src/controllers/`\n  - For now, add reference to controller in `src/entry.js` (with other controllers)\n5. Run `npm run start-watch` to compile and run server + tests in watch mode\n6. Navigate to http://localhost:3333/docs/swagger/index.html to see swagger-ui with your new endpoint\n\n### Tests/Running\n\n`npm run start-watch` to run open the server and run Webpack to watch for changes, recompiling, running the tests and restarting the server when it is done\n\n`npm run test-watch` to run Mocha and with all tests associated with the project, watch for changes on the files to re-run the tests\n\n`npm run dev-watch` to run only webpack and watch for changes on the files to recompile and reload the server\n\n`npm run test` to run all of the unit tests for the application one time\n\n`npm run dev` to run a development version of the server\n\n`npm run build` to compile development version of server to `dist/`\n\n`npm run doc` to generate static documentation in the doc folder\n\n`npm run clean` clean the workspace (remove `dist/`)\n\n`npm run help` to print the contents of `help.txt` to the command line\n\n**TODO**\n\n`npm run build-prod` ... TODO: compile application to production version\n\n`npm start` .. TODO: start production Server\n\n`npm stop` .. TODO: stop production Server\n\n`npm restart` will restart once start/stop completed\n\n\n## Notes/Ideas\n\n - OPTIONS requests?\n - RDBMS vs Document store\n  - https://medium.com/statuscode/three-reasons-to-use-a-nosql-document-store-for-your-next-web-application-6b9eabffc8d8\n  - Document Store:\n    - use for settings data and where schema will be changed often\n    - when changes are small crud, based on users interactions?\n    - when count and aggregate data is useful to end user\n  - RDBMS:\n    - less duplicated data, normalized and stored in specific tables\n    - useful when data changes often\n    - seems like more useful for storing fact data in ETL processes?\n    - Q: phoenix?\n\n- CAP theorem stands for C – Consistency, A — Availability, P — Partitioning (or Scalability) and states that having all three properties at the same time is not possible,\n\n### TODO\n\n - [x] (^) Node 8\n - [x] (^) Webpack  \n    - https://medium.com/@christossotiriou/speed-up-nodejs-server-side-development-with-webpack-4-hmr-8b99a932bdda  \n    - [x] babel\n      - [x] sourcemap support\n      - https://www.npmjs.com/package/babel-plugin-source-map-support#description\n    - [x] flow webpack plugin - typechecking each compilation\n    - [x] eslinting  \n    - [x] test with mocha\n    - [x] nodemon to run server\n - [x] (^) Fix watch commands so that tests can run and output errors without breaking\n    - [x] mocha shouldn't stop the process\n    - [x] tests should run again on changes with webpack\n - [x] (^) OpenAPI (Swagger) Documentation and ESDoc Plugin https://swagger.io/docs/specification/about/  \n    - [v] OpenAPI Validation  \n    - [x] Swagger UI\n        - [x] in Docs\n - [x] (^) Debugging while running\n     - use `node --inspect dist/server.bundle.js` to start debugger and a node debugging tool to attach\n - [..] (^) Update Linting Rules (linewrap, length, etc)  \n    - [x] ensuring files start with a comment https://github.com/Stuk/eslint-plugin-header  \n    - [x] Require Comments https://eslint.org/docs/rules/require-jsdoc and valid https://eslint.org/docs/rules/valid-jsdoc  \n    - [ ] Naming Conventions https://github.com/airbnb/javascript#naming-conventions\n    - [ ] Test Rules\n      - https://www.npmjs.com/package/eslint-plugin-mocha\n      - https://github.com/jest-community/eslint-plugin-jest\n - [..] (^) Simple DB endpoint  \n     - [ ] MongoDB\n     - [..] PostgreSQL or MariaDB\n     - [ ] (?) ElasticSearch? for search endpoint\n     - [ ] Proper error messages/codes from endpoints\n - [..] (^) Chai as promised and sinon-chai  \n - [ ] (^) Config.yaml and Env config file\n     - port\n     - other services/apis later?\n     - overrides\n - [ ] (^) cleanup old builds\n - [ ] (^) Typescript/Express router\n    - [ ] (?) Absolute Paths: https://itnext.io/configure-absolute-paths-with-create-react-app-and-flow-e4b8922676a2\n    - [ ] Routing Decorators and Validation https://github.com/typestack/routing-controllers\n      - Headers\n      - Cookies?\n    - [ ] OpenApi Decorators for openapi docs generation https://github.com/epiphone/routing-controllers-openapi\n      - Newman (Postman) Auto Test Generation: https://github.com/dtzar/openapi-auto-test\n    - [ ] Automatically find controller files in entry rather than need to reference  \n - [ ] (-) Healthcheck\n - [ ] (-) Request Performance\n - [ ] (-) Helpers\n    - [ ] mysql\n    - [ ] external-service request (with performance monitoring/caching?)\n    - [ ] Logging\n      - GELF/Kibana?\n      - Winston/Bunyon\n      - Pino logs to file\n    - [ ] SendEmail\n    - [ ] Cron?\n    - [ ] Authentication?\n - [ ] (-) Request Details Model attached to handler parameters\n - [ ] (-) Compression of responses\n - [ ] (-) Run only affected tests on file save  \n - [ ] (-) Githooks for generating reports/linting  \n    - Run `doc` command before commit on develop branch\n    - Check if spec files exist (except where special comment in file header)\n    - Check if READMEs exist at each directory level?\n - [ ] (-) Automatic Semantic Versioning (Based on PRs?) https://github.com/intuit/auto\n - [ ] (-) production vs dev\n      - webpack/build\n      - pm2 for production\n      - config\n      - proper logging\n - [ ] (-) Require Node v8 and recommend v10 on build\n - [ ] (-) `bin/` directory with script named `node.hapi` for starting/stopping prod\n - [..] (v) ESDoc plugins https://medium.com/trabe/understanding-esdoc-plugins-d9ee9095d98b  \n - [ ] (v) Cucumber.js for BDD(Behavior Driven Development) testing http://cucumber.github.io/cucumber-js/  \n - [ ] (v) Test coverage saved in spec files  \n - [ ] (v) Babel Istanbul(NYC) plugin https://github.com/istanbuljs/babel-plugin-istanbul  \n - [ ] (v) Istanbul (NYC) Reporters https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-reports/lib  \n - [ ] (v) ESDoc Manual with src READMEs https://doc.esdoc.org/github.com/esdoc/esdoc/manual/feature.html#integration-manual  \n - ~~[ ] Docsify?~~  \n\n### Application\n\n - [..] GET/POST/PUT/DELETE Note endpoints\n - [x] Serve Docs\n    - [ ] (v) only in development\n - [ ] External API endpoint\n    - Weather (in UI?)\n    - (Garbage UPC) Map to information/notes?\n - [ ] Connect to Google Drive/Oauth\n - [ ] Authorized vs Unauthorized endpoints\n - [ ] SSO Server\n\n\n## Issues\n\n```\nevents.js:183\n      throw er; // Unhandled 'error' event\n      ^\n\nError: spawn mocha ENOENT\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:190:19)\n    at onErrorNT (internal/child_process.js:362:16)\n    at _combinedTickCallback (internal/process/next_tick.js:139:11)\n    at process._tickCallback (internal/process/next_tick.js:181:9)\n```\n\n- Made sure using node v8 and re-ran `npm install -D`\n\n\n```\nmodule.js:550\n    throw err;\n    ^\n\nError: Cannot find module 'babel-polyfill'\n```\n\n- Commented out line `polyfill: \"@babel/polyfill\",` in webpack.config.js\n- re-ran webpack `npm run build`\n- then uncommented line and ran `npm run start-watch`\n",
    "longname": "/Users/djunker/js/template/template.node.hapi/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"version\": \"1.0.0\",\n  \"name\": \"HapiServer\",\n  \"description\": \"Template for Hapi Server\",\n  \"keywords\": [\n    \"flow\",\n    \"eslint\",\n    \"esdoc\",\n    \"template\",\n    \"node\",\n    \"hapi\",\n    \"server\"\n  ],\n  \"author\": \"djunker <devlin.junker@gmail.com>\",\n  \"license\": \"ISC\",\n  \"main\": \"dist/entry.js\",\n  \"scripts\": {\n    \"start-watch\": \"./node_modules/.bin/webpack --watch & (sleep 10s && nodemon dist/server.bundle.js)\",\n    \"test-watch\": \"node_modules/.bin/mocha --watch\",\n    \"dev-watch\": \"./node_modules/.bin/webpack --watch\",\n    \"test\": \"node_modules/.bin/mocha\",\n    \"doc\": \"./node_modules/.bin/esdoc && cp ./openapi.yaml docs/swagger/\" ,\n    \"dev\": \"npm run build && node dist/server.bundle.js\",\n    \"build\": \"./node_modules/.bin/webpack\",\n    \"clean\": \"rm -rf ./dist\",\n    \"help\": \"echo \\\"$(cat help.txt)\\\"\"\n  },\n  \"dependencies\": {\n    \"@hapi/hapi\": \"^18.4.0\",\n    \"@hapi/inert\": \"^5.2.2\",\n    \"hapi-pino\": \"^6.1.0\",\n    \"mariadb\": \"^2.1.1\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.6.4\",\n    \"@babel/plugin-transform-flow-strip-types\": \"^7.4.4\",\n    \"@babel/polyfill\": \"^7.6.0\",\n    \"@babel/preset-env\": \"^7.6.0\",\n    \"@babel/preset-es2015\": \"^7.0.0-beta.53\",\n    \"@babel/preset-flow\": \"^7.0.0\",\n    \"@babel/preset-stage-0\": \"^7.0.0\",\n    \"@babel/register\": \"^7.6.0\",\n    \"babel-eslint\": \"^10.0.3\",\n    \"babel-loader\": \"^8.0.6\",\n    \"babel-plugin-source-map-support\": \"^2.1.1\",\n    \"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n    \"chai\": \"^4.2.0\",\n    \"chai-as-promised\": \"^7.1.1\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-flow-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^6.4.0\",\n    \"eslint-config-prettier\": \"^6.4.0\",\n    \"eslint-loader\": \"^3.0.0\",\n    \"eslint-plugin-flowtype\": \"^4.3.0\",\n    \"eslint-plugin-flowtype-errors\": \"^4.1.0\",\n    \"eslint-plugin-header\": \"^3.0.0\",\n    \"eslint-plugin-prettier\": \"^3.1.1\",\n    \"flow-bin\": \"^0.107.0\",\n    \"flow-webpack-plugin\": \"^1.2.0\",\n    \"karma-chrome-launcher\": \"^3.1.0\",\n    \"mocha\": \"^6.2.0\",\n    \"mocha-loader\": \"^3.0.0\",\n    \"nodemon\": \"^1.19.2\",\n    \"prettier\": \"^1.18.2\",\n    \"require-context\": \"^1.1.0\",\n    \"sinon\": \"^7.4.2\",\n    \"sinon-chai\": \"^3.3.0\",\n    \"source-map-support\": \"^0.5.13\",\n    \"webpack\": \"^4.40.2\",\n    \"webpack-cli\": \"^3.3.9\",\n    \"webpack-dev-server\": \"^3.8.2\",\n    \"webpack-node-externals\": \"^1.7.2\",\n    \"webpack-shell-plugin\": \"^0.5.0\"\n  }\n}\n",
    "longname": "/Users/djunker/js/template/template.node.hapi/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 79,
    "kind": "testFile",
    "name": "template.node.hapi/src/controllers/hello.controller.spec.js",
    "content": "import { HelloWorld } from './hello.controller.js';\n\n/** @test {HelloWorld} */\ndescribe('HelloWorld', () => {\n  /** @test {HelloWorld.basic} */\n  describe('basic()', () => {\n    it('returns \\'Hello World!\\'', () => {\n      const returned = HelloWorld.basic();\n\n      expect(returned).to.equal('Hello World!');\n    });\n  });\n\n  /** @test {HelloWorld.name} */\n  describe('name()', () => {\n    it('returns \\'{request.params.name} says:\\'', () => {\n      const request = {\n        params: {\n          name: 'Devlin'\n        }\n      };\n\n      let returned = HelloWorld.name(request);\n      expect(returned.startsWith('Devlin says')).to.be.true;\n\n      request.params.name = 'Michelle';\n\n      returned = HelloWorld.name(request);\n      expect(returned.startsWith('Michelle says')).to.be.true;\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/controllers/hello.controller.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "template.node.hapi/src/controllers/hello.controller.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "template.node.hapi/src/controllers/hello.controller.spec.js~describe0",
    "access": null,
    "description": "HelloWorld",
    "lineNumber": 4,
    "testTargets": [
      "HelloWorld"
    ]
  },
  {
    "__docId__": 81,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "template.node.hapi/src/controllers/hello.controller.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "template.node.hapi/src/controllers/hello.controller.spec.js~describe0.describe1",
    "access": null,
    "description": "basic()",
    "lineNumber": 6,
    "testTargets": [
      "HelloWorld.basic"
    ]
  },
  {
    "__docId__": 82,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "template.node.hapi/src/controllers/hello.controller.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/hello.controller.spec.js~describe0.describe1.it2",
    "access": null,
    "description": "returns 'Hello World!'",
    "lineNumber": 7
  },
  {
    "__docId__": 83,
    "kind": "test",
    "name": "describe3",
    "testId": 3,
    "memberof": "template.node.hapi/src/controllers/hello.controller.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "template.node.hapi/src/controllers/hello.controller.spec.js~describe0.describe3",
    "access": null,
    "description": "name()",
    "lineNumber": 15,
    "testTargets": [
      "HelloWorld.name"
    ]
  },
  {
    "__docId__": 84,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "template.node.hapi/src/controllers/hello.controller.spec.js~describe0.describe3",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/hello.controller.spec.js~describe0.describe3.it4",
    "access": null,
    "description": "returns '{request.params.name} says:'",
    "lineNumber": 16
  },
  {
    "__docId__": 85,
    "kind": "testFile",
    "name": "template.node.hapi/src/controllers/note.controller.spec.js",
    "content": "import { NoteController } from './note.controller.js';\nimport { NoteDataservice } from '../dataservices/note.service.js';\nimport mariadb from 'mariadb';\n\n/**\n * Question:\n * Do we want to unit test controllers? If we do openapi based testing with Newman, I think that should\n * cover all of the standard \"black-box\" expectations of the endpoint.\n * https://github.com/dtzar/openapi-auto-test\n */\n\n/** @test {NoteController} */\ndescribe('NoteController', () => {\n  beforeEach(() => {\n    sinonSandbox.stub(mariadb, 'createPool');\n  });\n\n  /** @test {NoteController.getNoteById} */\n  describe('getNoteById()', () => {\n    it('should call NoteDataservice.getNote (with id)', () => {\n      const id = 42;\n      const getStub = sinonSandbox.stub(NoteDataservice, 'getNote');\n      NoteController.getNoteById({ params: { id } });\n\n      expect(getStub).to.be.called;\n      /**\n       * Question:\n       * Should we check what the NoteController passes to backend? Seems too much like \"white-box\" testing\n       */\n      expect(getStub).to.be.calledWith({ id });\n    });\n\n\n    /**\n     * Question:\n     * Is this useful? Or should we just check that it calls the backend dataservice?\n     */\n    it('should return a Note with id passed', () => {\n      const id = 1;\n      sinonSandbox.stub(NoteDataservice, 'getNote').returns({\n        id\n      });\n\n      const note = NoteController.getNoteById({ params: { id } });\n\n      expect(note).to.contain({ id });\n    });\n\n    it('should return error message if id is invalid');\n\n    it('should return error message if Note doesn\\'t exist');\n  });\n\n  /** @test {NoteController.createNote} */\n  describe('createNote()', () => {\n    it('should call DataService.createNote (with newName?)', async() => {\n      const createNoteStub = sinonSandbox.stub(NoteDataservice, 'createNote');\n\n      const newNoteName = 'abc';\n      await NoteController.createNote({ payload: { name: newNoteName } });\n\n      expect(createNoteStub).to.be.called;\n      expect(createNoteStub).to.be.calledWith({ name: newNoteName });\n    });\n\n    it('should return note with name passed and new id', async() => {\n      const id = 13;\n      sinonSandbox.stub(NoteDataservice, 'createNote').callsFake(({ name }) => {\n        return {\n          id,\n          name\n        };\n      });\n\n      const newNoteName = 'abc';\n      const note = await NoteController.createNote({ payload: { name: newNoteName } });\n\n      expect(note).to.deep.equal({\n        id,\n        name: newNoteName\n      });\n    });\n\n    it('should return error if note name is empty');\n\n    it('should return error message if error creating note');\n  });\n\n  /** @test {NoteController.updateNote} */\n  describe('updateNote()', () => {\n    it('should call NoteDataservice.updateNote (with params)');\n\n    it('should return note with updated name, as passed');\n\n    it('should return error message if id is invalid');\n\n    it('should return error message if error updating note');\n  });\n\n  /** @test {NoteController.deleteNote} */\n  describe('deleteNote()', () => {\n    it('should call NoteDataservice.deleteNote (with id)');\n\n    it('should return the deleted note id');\n\n    it('should return error message if id is invalid');\n\n    it('should return error message if error deleting note');\n  });\n});\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/controllers/note.controller.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "test",
    "name": "describe5",
    "testId": 5,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5",
    "access": null,
    "description": "NoteController",
    "lineNumber": 13,
    "testTargets": [
      "NoteController"
    ]
  },
  {
    "__docId__": 87,
    "kind": "test",
    "name": "describe6",
    "testId": 6,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5",
    "testDepth": 1,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe6",
    "access": null,
    "description": "getNoteById()",
    "lineNumber": 19,
    "testTargets": [
      "NoteController.getNoteById"
    ]
  },
  {
    "__docId__": 88,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe6.it7",
    "access": null,
    "description": "should call NoteDataservice.getNote (with id)",
    "lineNumber": 20
  },
  {
    "__docId__": 89,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe6.it8",
    "access": null,
    "description": "Question:\nIs this useful? Or should we just check that it calls the backend dataservice?",
    "lineNumber": 37
  },
  {
    "__docId__": 90,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe6.it9",
    "access": null,
    "description": "should return error message if id is invalid",
    "lineNumber": 48
  },
  {
    "__docId__": 91,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe6.it10",
    "access": null,
    "description": "should return error message if Note doesn't exist",
    "lineNumber": 50
  },
  {
    "__docId__": 92,
    "kind": "test",
    "name": "describe11",
    "testId": 11,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5",
    "testDepth": 1,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe11",
    "access": null,
    "description": "createNote()",
    "lineNumber": 54,
    "testTargets": [
      "NoteController.createNote"
    ]
  },
  {
    "__docId__": 93,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe11.it12",
    "access": null,
    "description": "should call DataService.createNote (with newName?)",
    "lineNumber": 55
  },
  {
    "__docId__": 94,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe11.it13",
    "access": null,
    "description": "should return note with name passed and new id",
    "lineNumber": 65
  },
  {
    "__docId__": 95,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe11.it14",
    "access": null,
    "description": "should return error if note name is empty",
    "lineNumber": 83
  },
  {
    "__docId__": 96,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe11.it15",
    "access": null,
    "description": "should return error message if error creating note",
    "lineNumber": 85
  },
  {
    "__docId__": 97,
    "kind": "test",
    "name": "describe16",
    "testId": 16,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5",
    "testDepth": 1,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe16",
    "access": null,
    "description": "updateNote()",
    "lineNumber": 89,
    "testTargets": [
      "NoteController.updateNote"
    ]
  },
  {
    "__docId__": 98,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe16.it17",
    "access": null,
    "description": "should call NoteDataservice.updateNote (with params)",
    "lineNumber": 90
  },
  {
    "__docId__": 99,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe16.it18",
    "access": null,
    "description": "should return note with updated name, as passed",
    "lineNumber": 92
  },
  {
    "__docId__": 100,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe16.it19",
    "access": null,
    "description": "should return error message if id is invalid",
    "lineNumber": 94
  },
  {
    "__docId__": 101,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe16.it20",
    "access": null,
    "description": "should return error message if error updating note",
    "lineNumber": 96
  },
  {
    "__docId__": 102,
    "kind": "test",
    "name": "describe21",
    "testId": 21,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5",
    "testDepth": 1,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe21",
    "access": null,
    "description": "deleteNote()",
    "lineNumber": 100,
    "testTargets": [
      "NoteController.deleteNote"
    ]
  },
  {
    "__docId__": 103,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe21",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe21.it22",
    "access": null,
    "description": "should call NoteDataservice.deleteNote (with id)",
    "lineNumber": 101
  },
  {
    "__docId__": 104,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe21",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe21.it23",
    "access": null,
    "description": "should return the deleted note id",
    "lineNumber": 103
  },
  {
    "__docId__": 105,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe21",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe21.it24",
    "access": null,
    "description": "should return error message if id is invalid",
    "lineNumber": 105
  },
  {
    "__docId__": 106,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe21",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/controllers/note.controller.spec.js~describe5.describe21.it25",
    "access": null,
    "description": "should return error message if error deleting note",
    "lineNumber": 107
  },
  {
    "__docId__": 107,
    "kind": "testFile",
    "name": "template.node.hapi/src/dataservices/note.service.spec.js",
    "content": "// import { NoteDataservice } from './note.service.js';\nimport mariadb from 'mariadb';\n\n/** @test {NoteDataservice} */\ndescribe('NoteDataservice', () => {\n\n  let queryStub;\n  beforeEach(() => {\n    queryStub = sinonSandbox.stub();\n    // TODO: Set up mariadb mock to return connectionStub we can check during tests\n    sinonSandbox.stub(mariadb, 'createPool').resolves({\n      getConnection: () => {\n        return {\n          query: queryStub\n        };\n      }\n    });\n  });\n\n  /** @test {NoteDataservice.getNote} */\n  describe('getNote()', () => {\n    it('should return a note object with matching id');\n\n    /**\n     * Question:\n     * Should we test that mariadb queryStub is called? Seems like \"white-box\" testing, so probably not\n     */\n  });\n\n  /** @test {NoteDataservice.createNote} */\n  describe('createNote()', () => {\n    it('should return a note with the name passed');\n  });\n});\n",
    "static": true,
    "longname": "/Users/djunker/js/template/template.node.hapi/src/dataservices/note.service.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "test",
    "name": "describe26",
    "testId": 26,
    "memberof": "template.node.hapi/src/dataservices/note.service.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "template.node.hapi/src/dataservices/note.service.spec.js~describe26",
    "access": null,
    "description": "NoteDataservice",
    "lineNumber": 5,
    "testTargets": [
      "NoteDataservice"
    ]
  },
  {
    "__docId__": 109,
    "kind": "test",
    "name": "describe27",
    "testId": 27,
    "memberof": "template.node.hapi/src/dataservices/note.service.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "template.node.hapi/src/dataservices/note.service.spec.js~describe26.describe27",
    "access": null,
    "description": "getNote()",
    "lineNumber": 21,
    "testTargets": [
      "NoteDataservice.getNote"
    ]
  },
  {
    "__docId__": 110,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "template.node.hapi/src/dataservices/note.service.spec.js~describe26.describe27",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/dataservices/note.service.spec.js~describe26.describe27.it28",
    "access": null,
    "description": "should return a note object with matching id",
    "lineNumber": 22
  },
  {
    "__docId__": 111,
    "kind": "test",
    "name": "describe29",
    "testId": 29,
    "memberof": "template.node.hapi/src/dataservices/note.service.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "template.node.hapi/src/dataservices/note.service.spec.js~describe26.describe29",
    "access": null,
    "description": "createNote()",
    "lineNumber": 31,
    "testTargets": [
      "NoteDataservice.createNote"
    ]
  },
  {
    "__docId__": 112,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "template.node.hapi/src/dataservices/note.service.spec.js~describe26.describe29",
    "testDepth": 2,
    "static": true,
    "longname": "template.node.hapi/src/dataservices/note.service.spec.js~describe26.describe29.it30",
    "access": null,
    "description": "should return a note with the name passed",
    "lineNumber": 32
  }
]